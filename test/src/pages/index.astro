---

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Carve UI â€” Testing</title>
		<style>
			[x-cloak] {
				display: none;
			}
		</style>
	</head>
	<body>
		<div class="p-32 space-y-32">

            <div x-data="alertDialog">
                <button x-ref="trigger" class="inline-flex items-center justify-center h-10 px-4 py-2 text-sm font-medium transition-colors bg-white border rounded-md hover:bg-neutral-100 active:bg-white focus:bg-white focus:outline-none focus:ring-2 focus:ring-neutral-200/60 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none">Open Alert</button>
                <template x-teleport="body">
                    <div x-ref="wrapper" x-bind="wrapperProps" class="fixed top-0 left-0 z-[99] flex items-center justify-center w-screen h-screen">
                        <div x-ref="backdrop" x-bind="backdropProps" class="absolute inset-0 w-full h-full bg-black bg-opacity-40"></div>
                        <div x-ref="content" x-bind="contentProps" class="relative w-full py-6 bg-white px-7 sm:max-w-lg sm:rounded-lg">
                            <div class="flex items-center justify-between pb-2">
                                <h3 x-ref="title" class="text-lg font-semibold">Alert Modal Title</h3>
                            </div>
                            <div class="relative w-auto" x-ref="description">
                                <p>This is placeholder text. Replace it with your own content.</p>
                            </div>
                            <div class="flex gap-4">
                                <button x-bind="closeProps">Cancel</button>
                                <button @click="closeDialog(); console.log('confirmed');">Do it</button>
                            </div>
                        </div>
                    </div>
                </template>
            </div>

            <div x-data="dialog">
                <button x-ref="trigger" class="inline-flex items-center justify-center h-10 px-4 py-2 text-sm font-medium transition-colors bg-white border rounded-md hover:bg-neutral-100 active:bg-white focus:bg-white focus:outline-none focus:ring-2 focus:ring-neutral-200/60 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none">Open Dialog</button>
                <template x-teleport="body">
                    <div x-ref="wrapper" x-bind="wrapperProps" class="fixed top-0 left-0 z-[99] flex items-center justify-center w-screen h-screen">
                        <div x-ref="backdrop" x-bind="backdropProps" class="absolute inset-0 w-full h-full bg-black bg-opacity-40"></div>
                        <div x-ref="content" x-bind="contentProps" class="relative w-full py-6 bg-white px-7 sm:max-w-lg sm:rounded-lg">
                            <div class="flex items-center justify-between pb-2">
                                <h3 x-ref="title" class="text-lg font-semibold">Modal Title</h3>
                                <button x-ref="close" x-bind="closeProps" class="absolute top-0 right-0 flex items-center justify-center w-8 h-8 mt-5 mr-5 text-gray-600 rounded-full hover:text-gray-800 hover:bg-gray-50">
                                    <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" /></svg>  
                                </button>
                            </div>
                            <div class="relative w-auto" x-ref="description">
                                <p>This is placeholder text. Replace it with your own content.</p>
                            </div>
                        </div>
                    </div>
                </template>
            </div>


            <div x-data="popover">
                <button x-ref="trigger" class="inline-flex items-center justify-center h-10 px-4 py-2 text-sm font-medium transition-colors bg-white border rounded-md hover:bg-neutral-100 active:bg-white focus:bg-white focus:outline-none focus:ring-2 focus:ring-neutral-200/60 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none">declarative dropdown</button>
                <div x-ref="content" x-cloak class="p-2 bg-white border rounded-md">
                    <p>Input</p>
                    <input type="text">
                    <button class="btn btn-primary" @click="closePopover">close</button>
                    <div x-ref="arrow" class="rounded-sm border"></div>
                </div>
            </div>
            
            <div x-data="tooltip">
                <div x-ref="trigger" class="inline-block px-3 py-1 text-xs rounded-full text-neutral-500 bg-neutral-100">hover me</div>
                <div x-ref="content" x-cloak class="p-2 bg-white border rounded-md">
                    This is a tooltip!
                    <div x-ref="arrow" class="rounded-sm border"></div>
                </div>
            </div>


            <!-- <div x-data="dropdownMenu">
                <button x-bind="triggerProps" x-ref="trigger" class="inline-flex items-center justify-center h-10 px-4 py-2 text-sm font-medium transition-colors bg-white border rounded-md hover:bg-neutral-100 active:bg-white focus:bg-white focus:outline-none focus:ring-2 focus:ring-neutral-200/60 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none">DropdownMenu</button>
                <div x-bind="panelProps" x-ref="panel" x-cloak class="p-2 bg-white border rounded-md">
                    <div x-bind="itemProps" class="data-[highlighted]:text-red">Item 1</div>
                    <div x-bind="separatorProps" class="h-px bg-neutral-400 my-1"></div>
                    <div id="test-id" x-bind="itemProps" class="data-[highlighted]:text-red">Item 2</div>
                    <div x-ref="arrow" class="rounded-sm border"></div>
                </div>
            </div> -->


            <div x-data="accordion" class="relative w-full mx-auto overflow-hidden text-sm font-normal bg-white border border-gray-200 divide-y divide-gray-200 rounded-md">
                <div x-data="accordionItem({ initialOpen: true })" class="cursor-pointer group">
                    <h2>
                        <button x-ref="trigger" class="flex items-center justify-between w-full p-4 text-left select-none group-hover:underline">
                            <span>What is Pines?</span>
                            <svg aria-hidden="true" class="w-4 h-4 motion-safe:duration-200 ease-out" :class="{ 'rotate-180': isOpen }" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
                        </button>
                    </h2>
                    <div x-ref="content" x-cloak> 
                        <div class="p-4 pt-0 opacity-70">
                            Pines is a UI library built for AlpineJS and TailwindCSS.
                        </div>
                    </div>
                </div>
                <div x-data="accordionItem" class="cursor-pointer group">
                    <h2>
                        <button x-ref="trigger" class="flex items-center justify-between w-full p-4 text-left select-none group-hover:underline">
                            <span>How do I install Pines?</span>
                            <svg aria-hidden="true" class="w-4 h-4 motion-safe:duration-200 ease-out" :class="{ 'rotate-180': isOpen }" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
                        </button>
                    </h2>
                    <div x-ref="content" x-cloak>
                        <div class="p-4 pt-0 opacity-70">
                            Add AlpineJS and TailwindCSS to your page and then copy and paste any of these elements into your project.
                        </div>
                    </div>
                </div>
            </div>


            <div x-data="tabs({ initialActive: 'tab-2', label: 'Hello' })" class="border border-gray-200 rounded-md">
                <div x-ref="list" class="flex justify-between">
                    <button x-data="tabTrigger('tab-1')" class="p-3" :class="{ 'text-red-500': isActive }">Tab 1</button>
                    <button x-data="tabTrigger('tab-2')" class="p-3" :class="{ 'text-red-500': isActive }">Tab 2 longer</button>
                    <button x-data="tabTrigger('tab-3')" class="p-3" :class="{ 'text-red-500': isActive }">Tab 3</button>
                    <div x-ref="indicator" class="size-3 bg-green-500 motion-safe:transition-[transform,width,height]"></div>
                </div>
                <div class="p-3" :class="{ 'text-red-500': isActive }" x-data="tabContent('tab-1')">
                    Tab 1 content
                </div>
                <div class="p-3" :class="{ 'text-red-500': isActive }" x-data="tabContent('tab-2')" x-cloak>
                    Tab 2 content
                </div>
                <div class="p-3" :class="{ 'text-red-500': isActive }" x-data="tabContent('tab-3')" x-cloak>
                    Tab 3 content
                </div>
            </div>

            <!-- <div x-data="select">
                <span x-ref="label">Select label</span>

            </div> -->

        </div>

	</body>
</html>
